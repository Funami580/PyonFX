name: PyonFX

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: [3.6, 3.7, 3.8, 3.9]

    steps:
      - uses: actions/checkout@v2

      # pull the required font for testing
      - if: matrix.os != 'windows-latest'
        name: Install font (Non-Windows)
        run: |
          GOBIN=$PWD/bin go get github.com/Crosse/font-install
          ./bin/font-install https://mirrors.tuna.tsinghua.edu.cn/osdn/mix-mplus-ipa/58720/migu-1p-20130430.zip
        shell: bash
      - if: matrix.os == 'windows-latest'
        name: Install font (Windows)
        run: |
          powershell ./.github/scripts/install-fonts.ps1
        shell: pwsh

      # setup python
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      # install dependencies
      - if: matrix.os == 'ubuntu-latest'
        name: Install dependencies (Linux)
        run: |
          sudo apt-get install pkg-config libfontconfig1-dev libfreetype6-dev libfribidi-dev libharfbuzz-dev nasm
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          cd libass && ./autogen.sh && ./configure && make
      - if: matrix.os == 'macos-latest'
        name: Install dependencies (macOS)
        run: |
          brew install pkg-config autoconf automake libtool freetype fribidi nasm harfbuzz
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          cd libass && ./autogen.sh && ./configure && make
      - if: matrix.os == 'windows-latest'
        name: Install dependencies (Windows)
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # apply lints
      - name: Lint with flake8
        run: |
          pip install flake8
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      # test
      - name: Test with pytest
        run: |
          pip install pytest pytest-check
          pytest
